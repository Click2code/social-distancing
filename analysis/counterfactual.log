
  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   15.0   Copyright 1985-2017 StataCorp LLC
  Statistics/Data Analysis            StataCorp
                                      4905 Lakeway Drive
     MP - Parallel Edition            College Station, Texas 77845 USA
                                      800-STATA-PC        http://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

Single-user 2-core Stata perpetual license:
       Serial number:  501506203290
         Licensed to:  Miklos Koren
                       CEU MicroData

Notes:
      1.  Stata is running in batch mode.
      2.  Unicode is supported; see help unicode_advice.
      3.  More than 2 billion observations are allowed; see help obs_advice.
      4.  Maximum number of variables is set to 5000; see help set_maxvar.

. do counterfactual.do 

. clear all

. 
. do "industry_location_panel.do"

. import delimited "../data/derived/occupation/naics_risk.csv", varnames(1) cle
> ar
(6 vars, 84 obs)

. tempfile occupation

. save `occupation', replace
(note: file /var/folders/7b/svcv81g94n3fm6nrj7ckr15c0000gn/T//St06112.000001 no
> t found)
file /var/folders/7b/svcv81g94n3fm6nrj7ckr15c0000gn/T//St06112.000001 saved

. 
. use "../data/clean/cbp/zip_code_business_patterns.dta", clear

. merge m:1 industry_code using `occupation', keep(match) nogen

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                           464,804  
    -----------------------------------------

. 
end of do-file

. do "calculate-exposure.do"

. generate teamwork_exposure = teamwork_share/100 * ln(employment_density)
(5,824 missing values generated)

. generate customer_exposure = customer_share/100 * ln(population_density)
(6,294 missing values generated)

. generate presence_exposure = presence_share/100 * ln(plant_size)

. generate overall_exposure  = affected_share/100 * ln(population_density)
(6,294 missing values generated)

. 
. foreach X of var *_exposure {
  2.         summarize `X'
  3.         replace `X' = round(`X'/r(max)*100)
  4. }

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
teamwork_e~e |    458,980     1.02599    .7788558  -1.575394   6.560357
(458,980 real changes made)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
customer_e~e |    458,510    1.930914    1.609443  -3.280917   9.831341
(458,510 real changes made)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
presence_e~e |    464,804     .193983    .2846667          0   3.246337
(381,514 real changes made)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
overall_ex~e |    458,510     3.03745    1.469592  -3.399505   9.940578
(458,510 real changes made)

. 
. label variable teamwork_exposure "Social distancing effect on teamwork (max=1
> 00)"

. label variable customer_exposure "Social distancing effect on customer contac
> t (max=100)"

. label variable presence_exposure "Social distancing effect on physical presen
> ce (max=100)"

. label variable overall_exposure "Social distancing exposure (max=100)"

. 
. 
end of do-file

. 
. /* 
> Calibrate epsilon to gamma=1.04 in
> 
> Ciccone, Antonio, and Robert Hall. 1996. “Productivity and the Density of Eco
> nomic Activity.” 
> The American Economic Review 86 (1): 54–70.
> 
> page 62.
> 
> density^agglomeration = density^(epsilon * chi)
> */
. scalar agglomeration = 0.04

. generate LHS = agglomeration * ln(population_density)
(6,294 missing values generated)

. generate RHS = (communication_share/100) * ln(population_density)
(6,294 missing values generated)

. 
. regress LHS RHS [aw=employment]
(sum of wgt is   8.7643e+07)

      Source |       SS           df       MS      Number of obs   =   458,510
-------------+----------------------------------   F(1, 458508)    >  99999.00
       Model |  670.794467         1  670.794467   Prob > F        =    0.0000
    Residual |  1292.19583   458,508  .002818262   R-squared       =    0.3417
-------------+----------------------------------   Adj R-squared   =    0.3417
       Total |   1962.9903   458,509  .004281247   Root MSE        =    .05309

------------------------------------------------------------------------------
         LHS |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         RHS |   .0259374   .0000532   487.87   0.000     .0258332    .0260416
       _cons |   .1744857   .0001854   941.03   0.000     .1741223    .1748491
------------------------------------------------------------------------------

. scalar epsilon = _b[RHS]

. generate chi = communication_share/100

. generate gamma = chi/(1-chi)

. 
. * Eq 4
. generate contact = population_density^(epsilon*(1-chi))
(5,824 missing values generated)

. * current number of contacts
. summarize contact [aw=employment]

    Variable |     Obs      Weight        Mean   Std. Dev.       Min        Max
-------------+-----------------------------------------------------------------
     contact | 458,980    87750639    1.087394   .0554947          0    1.28273

. scalar current_contact = r(mean)

. 
. * target contact is half
. scalar target_contact = current_contact * 0.5

. 
. * loop to find the cap
. scalar cap = 10000

. scalar average = current_contact 

. generate counterfactual = .
(464,804 missing values generated)

. while average > target_contact {
  2.         quietly replace counterfactual = min(population_density, cap)^(eps
> ilon*(1-chi))
  3.         quietly summarize counterfactual [aw=employment]
  4.         scalar average = r(mean)
  5.         scalar cap = 0.95*cap
  6. }

. 
. generate contact_ratio = counterfactual / contact
(6,294 missing values generated)

. * Eq 6 from the paper
. generate cost_ratio = chi*contact_ratio + (1-chi)*(contact_ratio)^(-gamma)
(6,294 missing values generated)

. summarize cost_ratio [aw=employment]

    Variable |     Obs      Weight        Mean   Std. Dev.       Min        Max
-------------+-----------------------------------------------------------------
  cost_ratio | 458,510    87643392    1.222481   .0567359   1.039587   1.322792

. 
. * compute for nyc
. merge m:1 zip using "nyc_zip.dta", keep(master match)

    Result                           # of obs.
    -----------------------------------------
    not matched                       458,614
        from master                   458,614  (_merge==1)
        from using                          0  (_merge==2)

    matched                             6,190  (_merge==3)
    -----------------------------------------

. generate nyc = (_m==3)

. summarize population_density if nyc==1 [aw=employment]

    Variable |     Obs      Weight        Mean   Std. Dev.       Min        Max
-------------+-----------------------------------------------------------------
population~y |   6,190     2892604    19902.81   12203.91          0   57231.17

. summarize cost_ratio if nyc==1 [aw=employment]

    Variable |     Obs      Weight        Mean   Std. Dev.       Min        Max
-------------+-----------------------------------------------------------------
  cost_ratio |   6,013     2841419    1.258541   .0590341   1.067878   1.322792

. 
. do "aggregate2digit.do"

. generate naics_2d = int(industry_code/10)

. replace naics_2d = 31 if (naics_2d>=31) & (naics<=33)
(25,843 real changes made)

. replace naics_2d = 44 if (naics_2d>=44) & (naics<=45)
(30,239 real changes made)

. replace naics_2d = 48 if (naics_2d>=48) & (naics<=49)
(3,411 real changes made)

. 
end of do-file

. collapse (mean) cost_ratio [aw=employment], by(naics_2d)

. gsort -cost_ratio

. export delimited "cost_by_naics2.csv", replace
file cost_by_naics2.csv saved

. 
end of do-file
