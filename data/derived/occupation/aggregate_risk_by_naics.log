
  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   15.1   Copyright 1985-2017 StataCorp LLC
  Statistics/Data Analysis            StataCorp
                                      4905 Lakeway Drive
     MP - Parallel Edition            College Station, Texas 77845 USA
                                      800-STATA-PC        http://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

Single-user 2-core Stata perpetual license:
       Serial number:  501506203290
         Licensed to:  Miklos Koren
                       CEU MicroData


Notes:
      1.  Stata is running in batch mode.
      2.  Unicode is supported; see help unicode_advice.
      3.  More than 2 billion observations are allowed; see help obs_advice.
      4.  Maximum number of variables is set to 5000; see help set_maxvar.

. do aggregate_risk_by_naics.do 

. clear all

. use "../../clean/employment-matrix/matrix.dta"

. 
. local indexes group customer presence

. 
. merge m:1 SOCCode using "risks.dta", keep(master match) nogen

    Result                           # of obs.
    -----------------------------------------
    not matched                           579
        from master                       579  
        from using                          0  

    matched                            12,245  
    -----------------------------------------

. * a few cases are missing the risk, take these to be low risk
. mvencode `indexes', mv(0) override
       group: 582 missing values recoded
    customer: 582 missing values recoded
    presence: 582 missing values recoded

. 
. replace Employment = round(Employment*1000)
(12,824 real changes made)

. compress
  variable Employment was double now long
  (51,296 bytes saved)

. 
. foreach X of var `indexes' {
  2.         summarize `X' [fw=Employment], detail
  3.         generate double high_`X' = (`X' > r(p75)) * Employment
  4. }

              Group communication index [0,100]
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%           38              0
10%           42              0       Obs         121,347,700
25%           51              0       Sum of Wgt. 121,347,700

50%           57                      Mean           57.33202
                        Largest       Std. Dev.      13.16771
75%           66             87
90%           74             87       Variance       173.3885
95%           76             87       Skewness      -1.032139
99%           81             87       Kurtosis       6.331392

            Customer communication index [0,100]
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%           35              0
10%           38              0       Obs         121,347,700
25%           47              0       Sum of Wgt. 121,347,700

50%           55                      Mean           55.58012
                        Largest       Std. Dev.      14.21306
75%           66             86
90%           73             86       Variance       202.0111
95%           77             86       Skewness      -.7034038
99%           82             89       Kurtosis       4.684272

               Physical presence index [0,100]
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            5              0
10%            5              0       Obs         121,347,700
25%           13              0       Sum of Wgt. 121,347,700

50%           23                      Mean           22.33092
                        Largest       Std. Dev.      12.24158
75%           31             70
90%           38             70       Variance       149.8563
95%           42             70       Skewness       .3191207
99%           53             70       Kurtosis       2.648195

. 
. collapse (sum) Employment high_group high_customer high_presence, by(industry
> _code)

. foreach X in `indexes' {
  2.         replace high_`X' = round(high_`X' / Employment * 100)
  3. }
(74 real changes made)
(74 real changes made)
(74 real changes made)

. drop Employment

. 
. export delimited "naics_risk.csv", replace
file naics_risk.csv saved

. 
end of do-file
